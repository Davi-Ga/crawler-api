worker_processes auto;

events {
	worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  types_hash_max_size 512;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  proxy_cache_path /var/cache/nginx 
  keys_zone=CACHE:10m 
  levels=1:2 
  inactive=3h 
  max_size=1g; 

  map $request_method $cors_method {
    OPTIONS 11;
    GET 1;
    POST 1;
    default 0;
  }


  upstream api {
    ip_hash;
    server api:8686 max_fails=3 fail_timeout=3s;
    keepalive 16;
  }
  server {
    listen 8686;
    server_name api;

    location / {
      if ($cors_method ~ '1') {
        add_header 'Access-Control-Allow-Methods' 
          'GET,POST,OPTIONS';
        add_header 'Access-Control-Allow-Origin' 
          '*';
        add_header  'Access-Control-Allow-Headers' 
          'DNT,
          Keep-Alive,
          User-Agent,
          X-Requested-With,
          If-Modified-Since,
          Cache-Control: private,
          X-Cache $upstream_cache_status;
          Content-Type: ';
        }
        if ($cors_method = '11') {
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain; charset=UTF-8';
          add_header 'Content-Length' 0;

          return 204;
         }

        proxy_pass         http://api;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_cache        CACHE;
        proxy_cache_bypass $http_upgrade;
        proxy_cache_key    $scheme$proxy_host$request_uri;
        proxy_cache_valid  200 301 302 10m; 
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_cache_control $http_pragma $http_authorization;
    }
  }
}